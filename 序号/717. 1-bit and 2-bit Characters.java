/**
 * 有两种特殊字符。第一种字符可以用一比特0来表示。第二种字符可以用两比特(10 或 11)来表示。
 *
 * 现给一个由若干比特组成的字符串。问最后一个字符是否必定为一个一比特字符。给定的字符串总是由0结束。
 *
 * 示例 1:
 *
 * 输入: 
 * bits = [1, 0, 0]
 * 输出: True
 * 解释: 
 * 唯一的编码方式是一个两比特字符和一个一比特字符。所以最后一个字符是一比特字符。
 * 示例 2:
 *
 * 输入: 
 * bits = [1, 1, 1, 0]
 * 输出: False
 * 解释: 
 * 唯一的编码方式是两比特字符和两比特字符。所以最后一个字符不是一比特字符。
 * @author:xzj
 * @date: 2018/8/20 10:29
 */
class Solution {
//    这个答案通过，但是我不认可，为什么1开头就要跳过2位，1开头也可能就是1 这个字符啊
//    看错了，题设不允许存在单独的1字符
    public boolean isOneBitCharacter(int[] bits) {
//        字符的可能性只有  0   1  10  11  这4种
//        让指针始终指向字符的开始位置，那么为0的时候，只可能是0，长度为1；当开始位置为1的时候，该字符长度为2；
        int i = 0;
        while (i < bits.length-1) {
            i += bits[i] + 1;
        }
        return i == bits.length - 1;
    }
}